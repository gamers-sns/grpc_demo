// @generated by protoc-gen-es v1.5.0 with parameter "target=ts"
// @generated from file catimages.proto (package catimages, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message catimages.CatImageRequest
 */
export class CatImageRequest extends Message<CatImageRequest> {
  constructor(data?: PartialMessage<CatImageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "catimages.CatImageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatImageRequest {
    return new CatImageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatImageRequest {
    return new CatImageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatImageRequest {
    return new CatImageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CatImageRequest | PlainMessage<CatImageRequest> | undefined, b: CatImageRequest | PlainMessage<CatImageRequest> | undefined): boolean {
    return proto3.util.equals(CatImageRequest, a, b);
  }
}

/**
 * @generated from message catimages.CatImageResponse
 */
export class CatImageResponse extends Message<CatImageResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<CatImageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "catimages.CatImageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatImageResponse {
    return new CatImageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatImageResponse {
    return new CatImageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatImageResponse {
    return new CatImageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CatImageResponse | PlainMessage<CatImageResponse> | undefined, b: CatImageResponse | PlainMessage<CatImageResponse> | undefined): boolean {
    return proto3.util.equals(CatImageResponse, a, b);
  }
}

